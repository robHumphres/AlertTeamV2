{"version":3,"sources":["main.js","home/home.controller.js","profile/profile.controller.js","weather/weather.controller.js","common/services/authentication.service.js","common/services/data.service.js","common/services/post.service.js","auth/login/login.controller.js","auth/register/register.controller.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","postData","vm","this","post","getPosts","success","data","sort","a","b","Date","time","error","e","console","log","$inject","profileCtrl","meanData","user","getProfile","weatherCtrl","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","now","currentUser","email","name","register","login","logout","removeItem","service","get","headers","Authorization","loginCtrl","credentials","password","onSubmit","err","alert","then","registerCtrl","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/weather', {\n          templateUrl: '/weather/weather.view.html',\n          controller: 'weatherCtrl',\n          controllerAs: 'vm'\n      })\n      //This line was added to handle the collapse issue on reload.\n      .otherwise({redirectTo : '/'})\n\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n\n  angular\n    .module('meanApp').config(['$routeProvider', '$locationProvider', config]).run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n","(function() {\n\n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n\n    homeCtrl.$inject = ['$location','postData'];\n    function homeCtrl ($location,postData) {\n      var vm = this;\n\n      vm.post ={};\n      //following is inside vm.post. post.title, post.postInfo, post.time\n      postData.getPosts()\n      .success(function(data){\n        vm.post = data;\n        //Sorts the array from newest to oldest.\n        vm.post.sort(function(a,b){\n          return new Date(b.time) - new Date(a.time);\n        });\n\n})\n      .error(function(e){\n        console.log(e);\n      });\n\n\n    }\n\n\n})();\n","(function() {\n\n  angular\n    .module('meanApp').controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('meanApp')\n    .controller('weatherCtrl', weatherCtrl);\n\n    function weatherCtrl () {\n      console.log('Weather controller is running');\n    }\n\n})();\n","(function () {\n\n  angular\n    .module('meanApp').service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n","(function() {\n\n  angular\n    .module('meanApp').service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n","(function(){\n\n\tangular\n\t.module('meanApp')\n\t.service('postData',postData);\n\n\tpostData.$inject = ['$http','authentication'];\n\tfunction postData($http,authentication){\n\n  \tvar getPosts = function(){\n\t\t\tvar vm = this;\n\t    vm.currentUser = authentication.currentUser();\n\t\t\tvar email = vm.currentUser.email;\n  \t\treturn $http.post('/api/allPosts', {email: email});\n  \t};\n\t  return{\n      getPosts : getPosts\n    };\n\t}\n\n})();\n","(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'//alias of the controller, allows us to get rid of $scope keyword and use this keyword\n    };\n  }\n\n})();\n"]}